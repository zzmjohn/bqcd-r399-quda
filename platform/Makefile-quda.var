#===============================================================================
#
# Makefile-quda.var - GNU compiler, MPICH style MPI
#
#-------------------------------------------------------------------------------
#
# Copyright (C) 2012 Hinnerk Stueben
#
# This file is part of BQCD -- Berlin Quantum ChromoDynamics program
#
# BQCD is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# BQCD is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with BQCD.  If not, see <http://www.gnu.org/licenses/>.
#
#-------------------------------------------------------------------------------

timing    = 1
mpi       = 1
omp       = 
debug     = 
libd      = 21

#-------------------------------------------------------------------------------

# specify the location of CUDA toolkit
CUDA_DIR = /usr/local/cuda

# specify the location of the QUDA library
QUDA_DIR = /home/mclark/github/quda

SHELL     = /bin/bash

MODULES_FLAG = -I$(MODULES_DIR) -I$(QUDA_DIR)/lib

FPP       = cpp -E -C -P -I$(QUDA_DIR)/include 
CC        = gcc
F90       = gfortran
AR        = ar
RANLIB    = echo

MYFLAGS   = 
FFLAGS_STD= $(MODULES_FLAG) -fno-range-check
CFLAGS_STD= -DNamesToLower_
ARFLAGS   = rv

# need the mpi_cxx library since we are using gfortran for linking
LDFLAGS   = -L$(QUDA_DIR)/lib -lquda -L$(CUDA_DIR)/lib64 -lcudart -lstdc++ -lmpi_cxx
SYSLIBS   = 

FAST_MAKE = make -j 8

CKSUM_O   = cksum.o
RANDOM_O  = ran.o ranf.o

LIBD      = libd$(libd).a
LIBCOMM   = lib_single_pe.a
LIBCLOVER = libclover.a

#-------------------------------------------------------------------------------

ifdef timing
    MYFLAGS  += -DTIMING
endif

ifdef mpi
    F90       = mpif90    
    MYFLAGS  += -DUSE_MPI_WTIME
    LIBCOMM   = lib_mpi.a
endif

ifdef omp
    F90      += -fopenmp
    MYFLAGS  += -D_OPENMP
endif

ifdef debug
    FFLAGS    = -g -O0 $(FFLAGS_STD)
    CFLAGS    = -g -O0 $(CFLAGS_STD)
else
    FFLAGS    = -O3 $(FFLAGS_STD)
    CFLAGS    = -O2 $(CFLAGS_STD)
endif    

#===============================================================================
